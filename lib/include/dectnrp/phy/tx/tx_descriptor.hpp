/*
 * Copyright 2023-2025 Maxim Penner
 *
 * This file is part of DECTNRP.
 *
 * DECTNRP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * DECTNRP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * A copy of the GNU Affero General Public License can be found in
 * the LICENSE file in the top-level directory of this distribution
 * and at http://www.gnu.org/licenses/.
 */

#pragma once

#include <cstdint>

#include "dectnrp/phy/harq/process_tx.hpp"
#include "dectnrp/radio/buffer_tx_meta.hpp"
#include "dectnrp/sections_part3/derivative/tx_meta.hpp"

namespace dectnrp::phy {

class tx_descriptor_t {
    public:
        /**
         * \brief An instance of this class defines all parameters required to generate and
         * transmit a DECT NR+ packet. For instance, the physical dimensions are part of the HARQ
         * process hp_tx, the transmission time as a 64-bit number is part of tx_meta.
         *
         * \param hp_tx_
         * \param codebook_index_
         * \param tx_meta_
         * \param buffer_tx_meta_
         */
        explicit tx_descriptor_t(harq::process_tx_t& hp_tx_,
                                 const uint32_t codebook_index_,
                                 const section3::tx_meta_t tx_meta_,
                                 const radio::buffer_tx_meta_t buffer_tx_meta_,
                                 const int32_t hw_id_ = hw_id_associated)
            : hp_tx(hp_tx_),
              codebook_index(codebook_index_),
              tx_meta(tx_meta_),
              buffer_tx_meta(buffer_tx_meta_),
              hw_id(hw_id_) {};

        /**
         * \brief Input buffer from MAC layer. This buffer also contains the packet sizes. This
         * buffer can be used across multiple calls to the PHY, for instance, when used as a HARQ
         * buffer.
         */
        harq::process_tx_t& hp_tx;

        /// 6.3.4 Beamforming and antenna port mapping
        const uint32_t codebook_index;

        /// additional PHY meta data that is not strictly DECTNRP related
        const section3::tx_meta_t tx_meta;

        /// additional radio layer meta data that is not strictly DECTNRP related
        const radio::buffer_tx_meta_t buffer_tx_meta;

        /**
         * \brief An instance of worker_pool_t, and its members worker_tx_rx_t, are associated with
         * one hw on the radio layer. However, a packet may also be cross-generated by an instance
         * of worker_tx_rx_t for another hw. It is up to the MAC firmware to packet configurations
         * are supported by the respective radio devices classes. A negative value of hw_id
         * indicates that the packet should be generated for the associated hw.
         */
        static constexpr int32_t hw_id_associated{-1};
        const int32_t hw_id{hw_id_associated};

    private:
};

}  // namespace dectnrp::phy
